What happens when you initialize a repository? Why do you need to do it?

	You create the structure for a repository. A hidden folder called .git.  This is necessary 
	to be able to store your commits and relevant info.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area only contains what you have added to it and gives you a chance to review the status 
	before commiting changes to the repository. The staging area can be reset anytime.

How can you use the staging area to make sure you have one commit per logical
change?
	
	The staging area allows you to compare differences with working directory and the last commit.
	This is useful to keep track of changes

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches allow you to explore more significant changes in your files while maintaining a working copy. 
	An example might be when you want to change the language or experiment with new structure.

How do the diagrams help you visualize the branch structure?

	You can see which commits are connected and which are unreachable from a given point.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	Changes from two different branches are merged together into one. The diagram shows the divergence and merging of the two lines.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?